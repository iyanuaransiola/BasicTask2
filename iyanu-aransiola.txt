
				Question A: EXPLAIN THE BASIC RULES OF CSS SPECIFICITY

One of the fundamental concepts of CSS is specificity and it entails how CSS is applied to HTML. It also determines which style declarations are ultimately applied to an element
This applies when the same element is targeted by multiple declarations, causing conflict of interest, hence  is the means by which browsers decide which CSS property values are the most relevant to an element and, therefore, will be applied. 
Specificity is based on the matching rules which are composed of different sorts of CSS selectors.
Specificity is a weight that is applied to a given CSS declaration, determined by the number of each selector type in the matching selector.

Some basic rules of css specificity include the following: 

(i) ID selectors have a higher specificity than attribute selectors.

(ii)Contextual selectors are more specific than a single element selector - The embedded style sheet is closer to the element to be styled. 

(iii) A class selector beats any number of element selectors - a class selector such as .intro beats h1, p, div, etc. An element selector is less specific.

(iv) When multiple declarations have equal specificity, the last declaration found in the CSS is applied to the element. 

(v) Sort the declarations by the source and the type of style sheet. The source specifies the origin from where the styles are rendered.

(vi) Highest priority is dedicated to the external style sheet defined by an author, in cascading order of priority is the reader, and the last is the browser.

(vii) Universal selector (*), combinators (+, >, ~, ' ', ||) and negation pseudo-class (:not()) have no effect on specificity. 

(viii) Inline styles added to an element (e.g., style="font-weight: bold;") always overwrite any styles in external stylesheets, and thus can be thought of as having the highest specificity.




				Question B: EXPLAIN THE THREE MAIN WAYS TO APPLY CSS TO A WEB PAGE

There are three ways one can use to implement CSS mainly: internal/embedded, external/link, and inline styles.

(1) Internal or embedded CSS requires you to add <style> tag in the <head> section of your HTML document:

This CSS style is an effective method of styling a single page. However, using this style for multiple pages is time-consuming as one need to put CSS rules to every page of one's website.

Here’s how you can use internal CSS:

					Open your HTML page and locate <head> opening tag.
					Put the following code right after the <head> tag
					<style type="text/css">
					Add CSS rules on a new line. Here’s an example:


Internal style sheet type allows the use class and ID selectors in this style sheet.

(2) External/Link CSS is the medium through which one links the web pages to an external .css file.
This CSS type is a more efficient method, especially for styling a large website. By editing one .css file, one can change one's entire site at once.
Since the CSS code is in a separate document, one's HTML files will have a cleaner structure and will also be smaller in size.
You can use the same .css file for multiple pages.
      Here is an examplary steps to use external CSS:

Create a new .css file, and add the style rules. For example:

					.xleftcol {
   					float: left;
   					width: 33%;
   					background:#809900;
					}

Next: In the <head> section of the HTML sheet, add a reference to the external .css file right after <title> tag:
					<link rel="stylesheet" type="text/css" href="style.css" />


Advantages of External CSS:
Since the 
Disadvantages of External CSS:
Your pages may not be rendered correctly until the external CSS is loaded.
Uploading or linking to multiple CSS files can increase your site’s download time.

Inline CSS
Inline CSS is used to style a specific HTML element. For this CSS style, you’ll only need to add the style attribute to each HTML tag, without using selectors.

This CSS type is not really recommended, as each HTML tag needs to be styled individually. Managing your website may become too hard if you only use inline CSS.

However, inline CSS in HTML can be useful in some situations. For example, in cases where you don’t have access to CSS files or need to apply styles for a single element only.

Let’s take a look at an example. Here, we add an inline CSS to the <p> and <h1> tag:

<!DOCTYPE html>
<html>
<body style="background-color:black;">

<h1 style="color:white;padding:30px;">Hostinger Tutorials</h1>
<p style="color:white;">Something usefull here.</p>

</body>
</html>
Advantages of Inline CSS:
You can easily and quickly insert CSS rules to an HTML page. That’s why this method is useful for testing or previewing the changes, and performing quick-fixes to your website.
You don’t need to create and upload a separate document as in the external style.
Disadvantages of Inline CSS:
Adding CSS rules to every HTML element is time-consuming and makes your HTML structure messy.
Styling multiple elements can affect your page’s size and download time.
Conclusion
In this tutorial, you’ve learned the difference between the three types of CSS: internal, external, and inline. Here’s the recap:

Internal or embedded ?— add <style> tag in the <head> section of HTML document
External ?— link the HTML sheet to a separate .css file
Inline ?— apply CSS rules for specific elements.
CSS can be applied to HTML or XHTML using three methods: linked/external, embedded/Internal, and inline. 
In the linked method, the CSS is stored in a separate file, instead of directly in the HTML page. In the embedded method, CSS is stored as part of the HTML page, in the header section. In the inline method, CSS is stored directly in the style attributes of the HTML tags, as <div style="font-weight:bold">Bold Font</div>.

The neatest method is probably the linked one, but the other ones are convenient and quick in the phases of prototyping a web page. The embedded and inline methods do not require having a separate file. The inline method saves you the trouble of considering what CSS classes your document should have. For a larger site, in which many web pages share the same styling, and in which the styling should be customizable by the user, the linked method is the only viable option.

With linked CSS, CSS rules are stored in a separate file. To refer to that file from the HTML page, add the link element (and its closing element within XHTML) to the head element, as shown in the following example, which assumes that the stylesheet is stored in the file named "style.css".
<head>
    <title>Example Web Page</title>
    <link rel="stylesheet" type="text/css" href="style.css">
  </head>

Embedded CSS is CSS that is located in the header of the HTML document that requires styling. For example we would like the text in this HTML document to appear bold
<head>
   <title>Example Web Page</title>
   <style type="text/css">
    p {
     font-weight:bold;
    }
   </style>
  </head>

Inline CSS is specified directly in the opening tag of the element you want it to apply to. It is entered into the style attribute within HTML or XHTML 1.1.

For example

 <div style="font-weight:bold; color:red;">Bold Font</div>



		Question C: EXPLAIN THE THREE MAIN WAYS TO TARGET ELEMENTS

In CSS, selectors are used to target the HTML elements on our web pages that we want to style.
You have met selectors already. A CSS selector is the first part of a CSS Rule. It is a pattern of elements and other terms that tell the browser which HTML elements should be selected to have the CSS property values inside the rule applied to them. The element or elements which are selected by the selector are referred to as the subject of the selector.
1. This group includes selectors that target an HTML element such as an <h1>. 
hence we'll get h1 { } for the css syntax incorporation.

2.It also includes selectors which target a class: .box { }

3. or, an ID: #unique { }